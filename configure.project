#!/bin/sh

# Project name and version
PACKAGE="unshield"
VERSION="1.6.0w"
PACKAGE_URL=''

# Flags that will be used in all makefiles that compile code...
PROJECT_CFLAGS='-Wall -g -O2' # -Wextra -Wno-unused-parameter -Wno-missing-field-initializers
PROJECT_CXXFLAGS="${PROJECT_CFLAGS}"
PROJECT_CPPFLAGS=''
PROJECT_LDFLAGS=''
PROJECT_LXXFLAGS=''
PROJECT_LIBS=''

# Project type, use C to avoid checking for C++ compiler and stuff
# supported values: C, C++ ("" = C++)
PROJECT_TYPE=C

# Makefile
MK_SUBDIRS='lib src'
MK_DISTCLEAN_FILES=''
MK_CHECK='./run-tests.sh'

add_env_help ZLIB

# configure the project using the commands provided
# by `configure` and other scripts and commands/tools
w_main_func()
{
	# GCC=yes if gcc has been detected

	# if the Makefiles are only compatible with GNU make, use w_require_gnu_make
	w_prefer_gnu_make

	# check required headers and exit on error
	w_check_headers_required stdio.h

	# detect the presence of headers
	# config.h: define HAVE_ZCONF_H if zconf.h is present, etc
	w_check_headers inttypes.h unistd.h dlfcn.h fnmatch.h getopt.h
    
	CFLAGS="-DAUTOTOOLS $CFLAGS"

	ZLIB_FOUND=
	if [ -n "$ZLIB_CFLAGS" ] || [ -n "$ZLIB_LIBS" ] ; then
		ZLIB_FOUND=1
	fi
	if [ ! "$ZLIB_FOUND" ] ; then
		find_pkgconfig  env='ZLIB' pc='zlib' required='false' #minver=1.2.11
		if [ ! "$ZLIB_FOUND" ] ; then
			find_lib  env='ZLIB' headers='zlib.h' libs='-lz' required='false'
		fi
	fi
}

# function to run after performing all checks
w_aftercheck_func()
{
	unset USE_BUILTIN_ZLIB
	libprivate='libraries_private=-lz'
	if [ ! "$ZLIB_FOUND" ] ; then
		echo "** Using builtin zlib"
		ZLIB_DIR="$(pwd)/lib/zlib"
		#directly compiled into libunshield
		set_env_flags ZLIB "" "-I${ZLIB_DIR}"
		USE_BUILTIN_ZLIB=1
		libprivate=''
	fi
	generate_pkgconfig \
		filebase='libunshield' \
		name='libunshield' \
		description='Library to extract CAB files from InstallShield installers' \
		version="${VERSION}" \
		libraries='-lunshield' ${libprivate}
}


# function to run once everything is done, probably add stuff to config.h and config.mk
w_finish_func()
{
	if [ "$OS_TARGET" = "MinGW" ] ; then
		echo "LCOMDLG32 = -lcomdlg32" >> config.mk
		echo "LSHLWAPI = -lshlwapi" >> config.mk
		echo "#define __GNU_SOURCE 1" >> config.h
	fi
	if [ -n "$USE_BUILTIN_ZLIB" ] ; then
		echo "BUILTIN_ZLIB_O = zlib/adler32.o zlib/inffast.o zlib/inflate.o zlib/inftrees.o zlib/zutil.o" >> config.mk
		echo "#define HAVE_LOCAL_ZLIB 1" >> config.h
	fi
}
